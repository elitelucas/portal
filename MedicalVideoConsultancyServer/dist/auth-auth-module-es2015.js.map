{"version":3,"sources":["./src/app/pages/auth/auth-routing.module.ts","./src/app/pages/auth/auth.module.ts","./src/app/pages/auth/sign-in-patient/sign-in-patient.component.ts","./src/app/pages/auth/sign-in-patient/sign-in-patient.component.html","./src/app/pages/auth/sign-in-super/sign-in-super.component.ts","./src/app/pages/auth/sign-in-super/sign-in-super.component.html","./src/app/pages/auth/sign-in/sign-in.component.ts","./src/app/pages/auth/sign-in/sign-in.component.html","./src/app/pages/auth/sign-up/sign-up.component.ts","./src/app/pages/auth/sign-up/sign-up.component.html","./src/app/pages/auth/sms-verify/sms-verify.component.ts","./src/app/pages/auth/sms-verify/sms-verify.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {SignInComponent} from \"./sign-in/sign-in.component\";\r\nimport {SignUpComponent} from \"./sign-up/sign-up.component\";\r\nimport {SignInPatientComponent} from \"./sign-in-patient/sign-in-patient.component\";\r\nimport {SignInSuperComponent} from \"./sign-in-super/sign-in-super.component\";\r\nimport {SmsVerifyComponent} from \"./sms-verify/sms-verify.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SignInSuperComponent\r\n  },\r\n\r\n  {\r\n    path: 'verify-email/:url',\r\n    component: SignInComponent\r\n  },\r\n\r\n  {\r\n    path: 'verify-sms/:url',\r\n    component: SmsVerifyComponent\r\n  },\r\n\r\n  {\r\n    path: 'sign-up/admin',\r\n    component: SignUpComponent\r\n  },\r\n\r\n  {\r\n    path: 'sign-up/provider',\r\n    component: SignUpComponent\r\n  },\r\n\r\n  {\r\n    path: 'sign-in',\r\n    component: SignInComponent\r\n  },\r\n\r\n  {\r\n    path: 'sign-in-patient',\r\n    component: SignInPatientComponent\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2TelInputModule } from \"ng2-tel-input\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { SignInPatientComponent } from './sign-in-patient/sign-in-patient.component';\r\nimport { SignInSuperComponent } from './sign-in-super/sign-in-super.component';\r\nimport { SmsVerifyComponent } from './sms-verify/sms-verify.component';\r\nimport { MatInputModule } from \"@angular/material\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [SignInComponent, SignUpComponent, SignInPatientComponent, SignInSuperComponent, SmsVerifyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    Ng2TelInputModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Patient } from './../../../_model/user';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { ProviderService } from \"../../../_services/provider.service\";\r\nimport { AuthPatientService } from '../../../_services/auth.patient.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-sign-in-patient',\r\n  templateUrl: './sign-in-patient.component.html',\r\n  styleUrls: ['./sign-in-patient.component.css']\r\n})\r\nexport class SignInPatientComponent implements OnInit {\r\n  step = 1;\r\n  roomForm: FormGroup;\r\n  enterForm: FormGroup;\r\n  joinForm: FormGroup;\r\n  submitted = false;\r\n  entered=false;\r\n  domain = environment.domain;\r\n  providerData: any;\r\n  isInvalidDomain: boolean = false;\r\n  isValidRoom: boolean = true;\r\n  verifyKey=false;\r\n  roomName;\r\n  dniPatient;\r\n  patientData:any;\r\n\r\n  isDuplicatedEmail: boolean = false;\r\n  isEmptyPhoneNumber: boolean = false;\r\n  isDuplicatedPhone: boolean = false;\r\n  isValidNumber: boolean = true;\r\n  isDuplicatedDNI: boolean = false;\r\n  directRoomUrl: string = '';\r\n  private phoneNumber: any;\r\n\r\n  identify_patient = 'OK';\r\n  no_identify_patient = 'NOK';\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private authPatientService: AuthPatientService,\r\n    private router: Router,\r\n    private providerService: ProviderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initData();\r\n  }\r\n\r\n  initData() {\r\n    localStorage.removeItem('step_attetion');\r\n    localStorage.removeItem('patient_auth');\r\n    localStorage.removeItem('patient');\r\n    localStorage.removeItem('provider');\r\n    localStorage.removeItem('patient_dni');\r\n    this.roomForm = this.formBuilder.group({\r\n      room: ['', [Validators.required, Validators.minLength(this.domain.length + 1)]],\r\n      dni: ['', Validators.required],\r\n      reason: ['', [Validators.required, Validators.minLength(1)]],\r\n      typeAttetion: ['', Validators.required]\r\n    });\r\n\r\n    this.f.dni.setValue(\"12312323\");\r\n    this.f.room.setValue(this.domain + \"testroom2\");\r\n    // this.f.room.setValue(this.domain);\r\n\r\n    this.joinForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      dni: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      phoneNumber: ['', Validators.required],\r\n      acceptTerms: [false, Validators.requiredTrue],\r\n      //providerId: ['', Validators.required],\r\n      room: ['', Validators.required],\r\n      reason: ['', [Validators.required, Validators.minLength(1)]],\r\n      typeAttetion: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get f() { return this.roomForm.controls; }\r\n  get f1() { return this.joinForm.controls; }\r\n\r\n  checkRoom() {\r\n    localStorage.setItem('patient_auth', this.no_identify_patient);\r\n    if (this.roomForm.valid) {\r\n      console.log(\"this.roomForm.value\");\r\n      console.log(this.roomForm.value);\r\n      this.authPatientService.joinValidatePatient(this.roomForm.value).subscribe((resultPatient) => {\r\n        this.submitted = true;\r\n        const room = this.f.room.value.substring(this.domain.length);\r\n        const dniPatient = this.f.dni.value;\r\n        this.providerService.checkRoomExist(room)\r\n          .subscribe(result => {\r\n            if (result) {\r\n              this.step = 2;\r\n              this.submitted = false;\r\n              this.patientData = resultPatient.patient;\r\n              this.providerData = result;\r\n              this.directRoomUrl = '/' + this.providerData.room;\r\n              localStorage.setItem('patient', JSON.stringify(this.patientData));\r\n              localStorage.setItem('provider', JSON.stringify(this.providerData));\r\n              localStorage.setItem('patient_auth', this.identify_patient);\r\n              this.router.navigateByUrl(this.directRoomUrl);\r\n            }\r\n            else {\r\n              this.isValidRoom = false;\r\n            }\r\n          });\r\n      }, error => {\r\n        this.step = 2;\r\n        this.f1.room.setValue(this.f.room.value);\r\n        this.f1.dni.setValue(this.f.dni.value);\r\n        this.f1.reason.setValue(this.f.reason.value);\r\n        this.f1.typeAttetion.setValue(this.f.typeAttetion.value);\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  hasError(event: boolean) {\r\n    this.isValidNumber = event;\r\n  }\r\n\r\n  getNumber(phoneNumber: any) {\r\n    this.phoneNumber = phoneNumber;\r\n    return this.phoneNumber;\r\n  }\r\n\r\n  join() {\r\n    localStorage.setItem('patient_auth', this.no_identify_patient);\r\n    this.submitted = true;\r\n    if (this.joinForm.invalid) {\r\n      return;\r\n    }\r\n    this.joinForm.value.phoneNumber = this.phoneNumber;\r\n    this.authPatientService.join(this.joinForm.value)\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.authPatientService.joinValidatePatient(result).subscribe(resultPatient => {\r\n            const room = this.f1.room.value.substring(this.domain.length);\r\n            this.providerService.checkRoomExist(room)\r\n              .subscribe(result => {\r\n                this.providerData = result;\r\n                this.directRoomUrl = '/' + this.providerData.room;\r\n                this.patientData = resultPatient.patient;\r\n                localStorage.setItem('patient', JSON.stringify(this.patientData));\r\n                localStorage.setItem('provider', JSON.stringify(this.providerData));\r\n                localStorage.setItem('patient_auth', this.identify_patient);\r\n                this.router.navigateByUrl(this.directRoomUrl);\r\n                this.step = 1\r\n                this.providerData = null;\r\n                this.directRoomUrl = null;\r\n              });\r\n          });\r\n        }\r\n      }, error => {\r\n        if (error) {\r\n          if (error.error) error.error.errors[0].field === \"dni\" ? this.isDuplicatedDNI = true : (error.error.errors[0].field === 'phoneNumber' ? this.isDuplicatedPhone = true : this.isDuplicatedEmail = true);\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  onReset() {\r\n    this.submitted = false;\r\n    this.isDuplicatedEmail = false;\r\n    this.isDuplicatedPhone = false;\r\n    this.isDuplicatedDNI = false;\r\n    this.isValidNumber = true;\r\n    this.isEmptyPhoneNumber = false;\r\n    this.joinForm.reset();\r\n  }\r\n}\r\n","<div class=\"patient\">\r\n  <div class=\"container-fluid min-vh-100 justify-content-center align-items-center\" style=\"width:40%\">\r\n    <ng-container *ngIf=\"step === 1\">\r\n\r\n      <div class=\"vh-100 justify-content-center align-items-center\">\r\n        <div class=\"card bg-dark\">\r\n          <div class=\"card-title text-center mt-5\">\r\n            Please provide us your information\r\n          </div>\r\n          <div class=\"card-body text-white\">\r\n            <form *ngIf=\"!verifyKey\" [formGroup]=\"roomForm\" (ngSubmit)=\"checkRoom()\">\r\n              <div>\r\n                <div class=\"form-group\">\r\n                  <label>DNI</label>\r\n                  <input type=\"text\" formControlName=\"dni\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.dni.errors }\" />\r\n                  <div *ngIf=\"submitted && f.dni.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.dni.errors.required\">DNI is required</div>\r\n                    <div *ngIf=\"f.dni.errors.pattern\">DNI is a number</div>\r\n                    <div *ngIf=\"f.dni.errors.minlength\">DNI must be longer than 8 characters.</div>\r\n                  </div>\r\n                  <div class=\"d-block invalid-feedback\">\r\n                    <div *ngIf=\"isDuplicatedDNI\">DNI is already in use.</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group col\">\r\n                  <label>Please input room name</label>\r\n                  <input matInput class=\"form-control\" formControlName=\"room\" type=\"text\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.room.errors }\">\r\n                  <div *ngIf=\"submitted&&f.room.errors\" class=\"invalid-feedback d-block font-20\">\r\n                    <div *ngIf=\"f.room.errors.minlength\">\r\n                      Please type the url of doctor room\r\n                    </div>\r\n                    <div *ngIf=\"f.room.errors.required\">\r\n                      This field is required\r\n                    </div>\r\n                  </div>\r\n                  <div *ngIf=\"isInvalidDomain\" class=\"invalid-feedback d-block font-20\">\r\n                    Please input valid domain\r\n                  </div>\r\n                  <div *ngIf=\"!isValidRoom\" class=\"invalid-feedback d-block font-20\">\r\n                    No available Room Name\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row \">\r\n                <div class=\"form-group col\">\r\n                  <label>Reason</label>\r\n                  <textarea type=\"text\" formControlName=\"reason\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.reason.errors }\">\r\n                    </textarea>\r\n                  <div *ngIf=\"submitted && f.reason.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.reason.errors.required\">Reason is required</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row \">\r\n                <div class=\"form-group col\">\r\n                  <label>Type Attetion</label>\r\n                  <div>\r\n                    <input formControlName=\"typeAttetion\" type=\"radio\" name=\"typeAttetion\" value=1>New Consult<br>\r\n                    <input formControlName=\"typeAttetion\" type=\"radio\" name=\"typeAttetion\" value=2>Following<br></div>\r\n                  <div *ngIf=\"submitted && f.typeAttetion.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.typeAttetion.errors.required\">Type Attetion is required</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"text-center\">\r\n                <button type=\"submit\" style=\"bottom: 0;\" class=\" mb-3 text-white font-bold color-check-in\">Verify\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n\r\n\r\n            <form *ngIf=\"verifyKey\" [formGroup]=\"enterForm\" (ngSubmit)=\"enterRoom()\">\r\n              <div>\r\n                <div class=\"form-group col\">\r\n                  <label>DNI</label>\r\n                  <input type=\"text\" formControlName=\"dni\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f2.dni.errors }\" />\r\n                  <div *ngIf=\"submitted && f2.dni.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f2.dni.errors.required\">DNI is required</div>\r\n                    <div *ngIf=\"f2.dni.errors.pattern\">DNI is a number</div>\r\n                    <div *ngIf=\"f2.dni.errors.minlength\">DNI must be longer than 8 characters.</div>\r\n                  </div>\r\n                  <div class=\"d-block invalid-feedback\">\r\n                    <div *ngIf=\"isDuplicatedDNI\">DNI is already in use.</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group col\">\r\n                  <label>Please input room name</label>\r\n                  <input matInput class=\"form-control\" formControlName=\"room\" type=\"text\" value=\"http://localhost:4200/\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f2.room.errors }\">\r\n                  <div *ngIf=\"submitted&&f2.room.errors\" class=\"invalid-feedback d-block font-20\">\r\n                    <div *ngIf=\"f2.room.errors.minlength\">\r\n                      Please type the url of doctor room\r\n                    </div>\r\n                    <div *ngIf=\"f2.room.errors.required\">\r\n                      This field is required\r\n                    </div>\r\n                  </div>\r\n                  <div *ngIf=\"isInvalidDomain\" class=\"invalid-feedback d-block font-20\">\r\n                    Please input valid domain\r\n                  </div>\r\n                  <div *ngIf=\"!isValidRoom\" class=\"invalid-feedback d-block font-20\">\r\n                    No available Room Name\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <div>\r\n                    <input id=\"male\" type=\"radio\" value=\"newConsult\" name=\"gender\" formControlName=\"gender\">\r\n                    <label for=\"male\">New Consult</label>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <input id=\"female\" type=\"radio\" value=\"followUp\" name=\"gender\" formControlName=\"gender\">\r\n                    <label for=\"female\">Follow Up</label>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <textarea class=\"form-control\" formControlName=\"reason\"\r\n                    placeholder=\"Reason For Medical Attention\"></textarea>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                Validate or modify your information\r\n              </div>\r\n              <div class=\"row mb-2\">\r\n                <div class=\"col-6\">\r\n                  <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': entered && f2.firstName.errors }\" placeholder=\"FirstName\" />\r\n                </div>\r\n                <div *ngIf=\"entered && f2.dni.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f2.dni.errors.required\">DNI is required</div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': entered && f2.lastName.errors }\" placeholder=\"LastName\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"row mb-2\">\r\n                <div class=\"col-6\">\r\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': entered && f2.email.errors }\" placeholder=\"Email Address\" />\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <input type=\"text\" formControlName=\"phoneNumber\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': entered && f2.phoneNumber.errors }\" placeholder=\"Phone Number\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"text-center\">\r\n                <button type=\"submit\" style=\"bottom: 0;\" class=\" mb-3 text-white font-bold color-check-in\">\r\n                  Enter Room\r\n                </button>\r\n              </div>\r\n\r\n\r\n            </form>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"step === 2\">\r\n      <div class=\"vh-100 d-flex justify-content-center align-items-center\">\r\n        <div class=\"card bg-dark\">\r\n          <div class=\"card-title text-center mt-5\">\r\n            Please provide us your information\r\n          </div>\r\n          <div class=\"card-body text-white\">\r\n            <form [formGroup]=\"joinForm\" (ngSubmit)=\"join()\">\r\n              <div class=\"form-row \">\r\n                <div class=\"form-group col\">\r\n                  <label>Full Name</label>\r\n                  <input type=\"text\" formControlName=\"fullName\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f1.fullName.errors }\" />\r\n                  <div *ngIf=\"submitted && f1.fullName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f1.fullName.errors.required\">Full Name is required</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group col\">\r\n                  <label>DNI</label>\r\n                  <input type=\"text\" formControlName=\"dni\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f1.dni.errors }\" />\r\n                  <div *ngIf=\"submitted && f1.dni.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f1.dni.errors.required\">DNI is required</div>\r\n                  </div>\r\n                  <div class=\"d-block invalid-feedback\">\r\n                    <div *ngIf=\"isDuplicatedDNI\">DNI is already in use.</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-row\">\r\n                <div class=\"form-group col\">\r\n                  <label>Email</label>\r\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f1.email.errors }\" />\r\n                  <div *ngIf=\"submitted && f1.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f1.email.errors.required\">Email address is required</div>\r\n                    <div *ngIf=\"f1.email.errors.email\">Email address is invalid</div>\r\n                  </div>\r\n                  <div class=\"invalid-feedback d-block\" *ngIf=\"isDuplicatedEmail\">Email is already in use</div>\r\n                </div>\r\n                <div class=\"form-group col text-black-50\">\r\n                  <label class=\"text-white\">Phone Number</label>\r\n                  <input type=\"text\" ng2TelInput formControlName=\"phoneNumber\" class=\"form-control  text-black-50\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f1.phoneNumber.errors }\" (hasError)=\"hasError($event)\"\r\n                    (ng2TelOutput)=\"getNumber($event)\" />\r\n                  <div class=\"invalid-feedback d-block\" *ngIf=\"isEmptyPhoneNumber\">Phone Number is required</div>\r\n                  <div class=\"invalid-feedback d-block\" *ngIf=\"isDuplicatedPhone\">Phone Number is already in use</div>\r\n                  <div class=\"invalid-feedback d-block\" *ngIf=\"!isValidNumber\">Please type valid number</div>\r\n                </div>\r\n              </div>\r\n\r\n              <!--Hidden field\r\n              <input type=\"hidden\" formControlName=\"providerId\">-->\r\n              \r\n              <div class=\"form-group col\">\r\n                <label>Please input room name</label>\r\n                <input matInput class=\"form-control\" formControlName=\"room\" type=\"text\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f1.room.errors }\">\r\n                <div *ngIf=\"submitted&&f.room.errors\" class=\"invalid-feedback d-block font-20\">\r\n                  <div *ngIf=\"f1.room.errors.minlength\">\r\n                    Please type the url of doctor room\r\n                  </div>\r\n                  <div *ngIf=\"f1.room.errors.required\">\r\n                    This field is required\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"isInvalidDomain\" class=\"invalid-feedback d-block font-20\">\r\n                  Please input valid domain\r\n                </div>\r\n                <div *ngIf=\"!isValidRoom\" class=\"invalid-feedback d-block font-20\">\r\n                  No available Room Name\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-row \">\r\n                <div class=\"form-group col\">\r\n                  <label>Reason</label>\r\n                  <textarea type=\"text\" formControlName=\"reason\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f1.reason.errors }\">\r\n                    </textarea>\r\n                  <div *ngIf=\"submitted && f.reason.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f1.reason.errors.required\">Reason is required</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row \">\r\n                <div class=\"form-group col\">\r\n                  <label>Type Attetion</label>\r\n                  <div>\r\n                    <input formControlName=\"typeAttetion\" type=\"radio\" name=\"typeAttetion\" value=1>New Consult<br>\r\n                    <input formControlName=\"typeAttetion\" type=\"radio\" name=\"typeAttetion\" value=2>Following<br></div>\r\n                  <div *ngIf=\"submitted && f1.typeAttetion.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f1.typeAttetion.errors.required\">Type Attetion is required</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group form-check mt-3\">\r\n                <input type=\"checkbox\" formControlName=\"acceptTerms\" id=\"acceptTerms\" class=\"form-check-input cursor\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f1.acceptTerms.errors }\" />\r\n                <label for=\"acceptTerms\" class=\"form-check-label\">Accept Terms & Conditions</label>\r\n                <div *ngIf=\"submitted && f1.acceptTerms.errors\" class=\"invalid-feedback\">Accept Ts & Cs is required\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"text-center\">\r\n                <button class=\"btn btn-primary mr-1\">Join</button>\r\n                <button class=\"btn btn-secondary ml-3\" type=\"reset\" (click)=\"onReset()\">Cancel</button>\r\n                <a class=\"ml-3\" routerLink=\"/\"> <i class=\"fa fa-arrow-circle-o-left\"></i> Go home</a>\r\n                <a class=\"ml-3 text-white-50\" routerLink=\"{{directRoomUrl}}\"> <i\r\n                    class=\"fa fa-arrow-circle-o-right\"></i>Already\r\n                  had account ?</a>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from \"../../../_services/auth.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {error} from \"selenium-webdriver\";\r\n\r\n@Component({\r\n  selector: 'app-sign-in-super',\r\n  templateUrl: './sign-in-super.component.html',\r\n  styleUrls: ['./sign-in-super.component.css']\r\n})\r\nexport class SignInSuperComponent implements OnInit {\r\n\r\n  authForm: FormGroup;\r\n  isSubmitted  =  false;\r\n  isLoginFailed: boolean = false;\r\n  hasNotPermission: boolean = false;\r\n  constructor(\r\n    private authService: AuthService, private router: Router, private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authForm  =  this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(100)]]\r\n    });\r\n  }\r\n\r\n  get formControls() { return this.authForm.controls; }\r\n\r\n  signIn(){\r\n    this.isSubmitted = true;\r\n    if(this.authForm.invalid){\r\n      return;\r\n    }\r\n    this.authService.signIn(this.authForm.value).subscribe((res: any)=> {\r\n      if(res.token) {\r\n        if(res.user.role === \"SuperAdmin\") {\r\n          this.router.navigateByUrl('/dashboard/super');\r\n        } else {\r\n          this.hasNotPermission = true;\r\n          this.router.navigateByUrl('/super')\r\n        }\r\n      }\r\n    }, error => {\r\n      this.isLoginFailed = true;\r\n      this.router.navigateByUrl('/super')\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"vh-100  d-flex justify-content-center align-items-center\">\r\n  <div>\r\n    <h1 style=\"text-align:center\">\r\n      Welcome back, Admin\r\n    </h1>\r\n    <ng-container *ngIf=\"isLoginFailed\">\r\n      <div  class=\"text-center text-danger\" >\r\n        <h4>Login failed. Email or Password is invalid</h4>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"hasNotPermission\">\r\n      <div  class=\"text-center text-danger\" >\r\n        <h4>Only Super Admin can access to this page.</h4>\r\n      </div>\r\n    </ng-container>\r\n    <div class=\"login\">\r\n      <h2 class=\"login-header\">Log in</h2>\r\n      <form [formGroup]=\"authForm\" class=\"login-container\" (ngSubmit)=\"signIn()\"> <p [ngClass]=\"{ 'has-error': isSubmitted && formControls.email.errors }\">\r\n        <input type=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n      </p> <div *ngIf=\"isSubmitted && formControls.email.errors\" class=\"help-block\">\r\n        <div *ngIf=\"formControls.email.errors.required\">Email is required</div>\r\n        <div *ngIf=\"formControls.email.errors.email\">Please type valid email</div>\r\n      </div> <p [ngClass]=\"{ 'has-error': isSubmitted && formControls.password.errors }\">\r\n        <input type=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n      </p> <div *ngIf=\"isSubmitted && formControls.password.errors\" class=\"help-block\">\r\n        <div *ngIf=\"formControls.password.errors.required\">Password is required</div>\r\n        <div *ngIf=\"formControls.password.errors.minlength\">Password must be over than 8 letters</div>\r\n        <div *ngIf=\"formControls.password.errors.maxlength\">Password must be less than 100 letters</div>\r\n      </div> <p>\r\n        <input type=\"submit\" value=\"Log in\">\r\n      </p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from \"../../../_services/auth.service\";\r\nimport {ActivatedRoute,  Router} from \"@angular/router\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  isSubmitted  =  false;\r\n  isLoginFailed: boolean = false;\r\n  isApproved: boolean = true;\r\n  isActive: boolean = true;\r\n  constructor(private authService: AuthService, private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder) {\r\n    this.authForm  =  this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.maxLength(100)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //When user approved, verify his email.\r\n    const token: string = this.route.snapshot.params.url;\r\n    if(token) {\r\n      this.authService.emailVerify(token).subscribe(res=> {\r\n        console.log(\"email verify success\", res);\r\n        this.router.navigateByUrl('/auth/sign-in');\r\n      });\r\n    }\r\n  }\r\n\r\n  get formControls() { return this.authForm.controls; }\r\n\r\n  signIn(){\r\n    this.isSubmitted = true;\r\n    if(this.authForm.invalid){\r\n      return;\r\n    }\r\n     this.authService.signIn(this.authForm.value).subscribe( res => {\r\n       console.log('res')\r\n       console.log(res)\r\n       if(res.user.role==='User'){\r\n        this.router.navigateByUrl('/dashboard/health-provider')\r\n       }else if(res.user.role==='Analysis'){\r\n        this.router.navigateByUrl('/dashboard/analysis')\r\n       }else if(res.user.role==='SuperAdmin'){\r\n        this.router.navigateByUrl('/dashboard/administrators')\r\n       }\r\n    }, error => {\r\n      this.isLoginFailed = !!error;\r\n     }\r\n   );\r\n  }\r\n\r\n  gotoRegister(){\r\n    this.router.navigateByUrl('/auth/sign-up/provider')\r\n  }\r\n\r\n  allowLogin(res) {\r\n    if (res.user.role === \"Admin\") {\r\n      this.router.navigateByUrl('/dashboard/admin')\r\n    } else {\r\n      this.router.navigateByUrl('/dashboard/health-provider')\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"vh-100  d-flex justify-content-center align-items-center\">\r\n  <div>\r\n    <h1 style=\"text-align:center\">\r\n      Welcome\r\n    </h1>\r\n    <ng-container *ngIf=\"isLoginFailed\">\r\n      <div  class=\"text-center text-danger\" >\r\n        <h4>Login failed. Email or Password is invalid</h4>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!isActive\">\r\n      <div  class=\"text-center text-danger\" >\r\n        <h6>Your account is inactive</h6>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!isApproved\">\r\n      <div  class=\"text-center text-danger\" >\r\n        <h6>Your account is not approved</h6>\r\n      </div>\r\n    </ng-container>\r\n    <div class=\"login\">\r\n      <h2 class=\"login-header\">Log in</h2>\r\n      <form [formGroup]=\"authForm\" class=\"login-container\" (ngSubmit)=\"signIn()\"> <p [ngClass]=\"{ 'has-error': isSubmitted && formControls.email.errors }\">\r\n        <input type=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n      </p> <div *ngIf=\"isSubmitted && formControls.email.errors\" class=\"help-block\">\r\n        <div *ngIf=\"formControls.email.errors.required\">Email is required</div>\r\n        <div *ngIf=\"formControls.email.errors.email\">Please type valid email</div>\r\n      </div> \r\n      <p [ngClass]=\"{ 'has-error': isSubmitted && formControls.password.errors }\">\r\n        <input type=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n      </p> \r\n      <div *ngIf=\"isSubmitted && formControls.password.errors\" class=\"help-block\">\r\n        <div *ngIf=\"formControls.password.errors.required\">Password is required</div>\r\n        <div *ngIf=\"formControls.password.errors.maxlength\">Password must be less than 100 letters</div>\r\n      </div> \r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          <button class=\"btn btn-primary\" type=\"submit\" style=\"float:left;\">Log in</button>\r\n\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <button class=\"btn btn-warning\" style=\"float:right;\" (click)=\"gotoRegister()\">Register</button>\r\n\r\n        </div>\r\n      </div>\r\n      </form>\r\n      \r\n    </div>\r\n  </div>\r\n</div>\r\n","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MustMatch} from \"../../../_helpers/must-match.validator\";\r\nimport {AuthService} from \"../../../_services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\nduplicatedKey=false;\r\n\r\n  isDuplicatedRoom: boolean = false;\r\n  isPending: boolean = false;\r\n  isDuplicatedEmail:boolean = false;\r\n  isDuplicatedPhone: boolean = false;\r\n  isValidNumber: boolean = true;\r\n  isEmptyPhoneNumber: boolean = false;\r\n  phoneNumber:string = '';\r\nconstructor(\r\n  private formBuilder: FormBuilder, \r\n  private auth: AuthService,\r\n  private router:Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email,Validators.maxLength(100)]],\r\n      password: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required],\r\n    }, {\r\n      validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.auth.signUp(this.registerForm.value).subscribe(res=> {\r\n    if(res==='duplicate'){\r\n      this.duplicatedKey=true;\r\n    }\r\n      if(res.token) {\r\n        this.router.navigateByUrl('/dashboard/health-provider');\r\n      } else if(res.status == \"409\") {\r\n        console.log('sdfsdf')\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  hasError(event: boolean) {\r\n    this.isValidNumber = event;\r\n  }\r\n}\r\n","<div class=\"vh-100 d-flex justify-content-center align-items-center\">\r\n  <!-- main app container -->\r\n  <div class=\"card bg-dark\">\r\n    <div class=\"card-title text-center mt-5\">\r\n      <a class=\"navbar-brand\" href=\"index.html\">\r\n        <!-- Logo icon -->\r\n \r\n        <!-- Logo text -->\r\n        <span fxShow=\"false\" fxShow.gt-xs class=\"mx-3 text-white-50\">\r\n          PORTAL\r\n        </span>\r\n      </a>\r\n    </div>\r\n    <div class=\"card-body text-white\">\r\n      <ng-container *ngIf=\"duplicatedKey\">\r\n        <p class=\"mt-3 text-danger text-center\">\r\n          Duplicated Email.\r\n        </p>\r\n      </ng-container>\r\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n     \r\n        <div class=\"form-row\">\r\n          <div class=\"form-group col\">\r\n            <label>Email</label>\r\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\"\r\n                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.email.errors.required\">Email address is required</div>\r\n              <div *ngIf=\"f.email.errors.email\">Email address is invalid</div>\r\n              <div *ngIf=\"f.email.errors.maxlength\">Email address must be less than 100 characters</div>\r\n            </div>\r\n            <div class=\"invalid-feedback d-block\" *ngIf=\"isDuplicatedEmail\">Email is already in use</div>\r\n          </div>\r\n      \r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n          <div class=\"form-group col\">\r\n            <label>Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"/>\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col\">\r\n            <label>Confirm password</label>\r\n            <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\"/>\r\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n              <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Confirm Password must match</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"text-center\">\r\n          <button class=\"btn btn-primary mr-1\">Register</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AuthService} from \"../../../_services/auth.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-sms-verify',\r\n  templateUrl: './sms-verify.component.html',\r\n  styleUrls: ['./sms-verify.component.css']\r\n})\r\nexport class SmsVerifyComponent implements OnInit {\r\n  smsForm: FormGroup;\r\n  isSubmitted  =  false;\r\n  isVerifyFailed: boolean = false;\r\n  fakeToken: string;\r\n  constructor(\r\n    private authService: AuthService, private router: Router, private formBuilder: FormBuilder, private route: ActivatedRoute\r\n  ) { this.fakeToken = this.route.snapshot.params.url; console.log(\"snap shot for fake number\", this.fakeToken)}\r\n\r\n  ngOnInit(): void {\r\n    this.smsForm  =  this.formBuilder.group({\r\n      smsCode: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]],\r\n    });\r\n  }\r\n\r\n  get formControls() { return this.smsForm.controls; }\r\n\r\n  smsVerify(){\r\n    this.isSubmitted = true;\r\n    if(this.smsForm.invalid){\r\n      return;\r\n    }\r\n    if(!this.fakeToken) return;\r\n    this.authService.smsVerify(this.smsForm.value, this.fakeToken).subscribe(res=> {\r\n      console.log(\"verification success sms\", res);\r\n      if(res.status === \"active\") {\r\n        this.router.navigateByUrl('/auth/sign-in');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"vh-100  d-flex justify-content-center align-items-center\">\r\n  <div>\r\n    <h1 style=\"text-align:center\">\r\n      Welcome\r\n    </h1>\r\n    <ng-container *ngIf=\"isVerifyFailed\">\r\n      <div class=\"text-center text-danger\">\r\n        <h4>Verify failed. code is invalid</h4>\r\n      </div>\r\n    </ng-container>\r\n    <div class=\"login\">\r\n      <h4 class=\"login-header\">Please Enter your verification code</h4>\r\n      <form [formGroup]=\"smsForm\" class=\"login-container\" (ngSubmit)=\"smsVerify()\">\r\n        <p [ngClass]=\"{ 'has-error': isSubmitted && formControls.smsCode.errors }\">\r\n          <input type=\"number\" placeholder=\"Verification code\" formControlName=\"smsCode\">\r\n        </p>\r\n        <div *ngIf=\"isSubmitted && formControls.smsCode.errors\" class=\"help-block\">\r\n          <div *ngIf=\"formControls.smsCode.errors.required\">Code is required</div>\r\n          <div *ngIf=\"formControls.smsCode.errors.minlength || formControls.smsCode.error.maxlength\">Please type 6 digits</div>\r\n        </div>\r\n        <p>\r\n          <input type=\"submit\" value=\"Verify with code\">\r\n        </p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}